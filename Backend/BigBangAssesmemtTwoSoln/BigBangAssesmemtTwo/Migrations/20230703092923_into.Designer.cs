// <auto-generated />
using System;
using BigBangAssesmemtTwo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigBangAssesmemtTwo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230703092923_into")]
    partial class into
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailId = "admin@gmail.com",
                            PasswordHash = new byte[] { 245, 197, 144, 205, 153, 29, 11, 98, 48, 31, 120, 161, 48, 127, 193, 26, 99, 231, 190, 27, 44, 134, 8, 199, 106, 249, 33, 35, 186, 125, 18, 132, 255, 73, 138, 169, 134, 92, 179, 24, 37, 250, 194, 97, 24, 65, 139, 235, 81, 157, 48, 135, 247, 33, 19, 110, 167, 118, 197, 206, 95, 218, 88, 40 },
                            PasswordKey = new byte[] { 119, 119, 203, 4, 115, 8, 65, 21, 71, 104, 39, 52, 2, 27, 0, 118, 128, 187, 33, 139, 121, 71, 235, 50, 101, 23, 24, 45, 13, 8, 95, 23, 174, 27, 54, 209, 40, 63, 9, 94, 176, 136, 13, 147, 208, 4, 196, 178, 61, 159, 103, 55, 114, 125, 238, 1, 116, 242, 103, 7, 92, 238, 61, 211, 164, 25, 234, 65, 217, 78, 62, 159, 128, 116, 246, 136, 123, 148, 178, 156, 241, 93, 16, 163, 37, 128, 23, 147, 217, 15, 128, 187, 243, 204, 1, 36, 32, 197, 89, 81, 250, 111, 191, 71, 197, 172, 127, 235, 114, 14, 57, 122, 49, 209, 155, 184, 188, 40, 41, 51, 56, 30, 77, 100, 189, 230, 69, 198 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
