// <auto-generated />
using System;
using BigBangAssesmemtTwo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigBangAssesmemtTwo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230703092517_design")]
    partial class design
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailId = "admin@gmail.com",
                            PasswordHash = new byte[] { 200, 4, 35, 35, 181, 245, 102, 48, 207, 180, 194, 94, 42, 30, 140, 63, 168, 30, 59, 48, 21, 40, 120, 147, 188, 185, 91, 213, 42, 87, 75, 153, 86, 131, 6, 36, 193, 185, 208, 181, 29, 62, 162, 191, 96, 66, 32, 15, 157, 69, 132, 251, 81, 209, 67, 33, 143, 227, 222, 20, 232, 84, 149, 59 },
                            PasswordKey = new byte[] { 186, 250, 230, 20, 161, 219, 143, 74, 205, 117, 112, 33, 26, 9, 209, 103, 147, 241, 53, 26, 102, 193, 5, 251, 173, 55, 36, 47, 139, 178, 140, 196, 212, 187, 49, 26, 174, 152, 153, 23, 4, 154, 173, 241, 20, 197, 123, 44, 179, 203, 241, 186, 144, 204, 102, 151, 97, 32, 64, 23, 213, 140, 104, 209, 250, 142, 50, 246, 115, 155, 191, 27, 160, 175, 138, 18, 218, 137, 31, 54, 250, 92, 225, 72, 143, 51, 4, 127, 124, 181, 15, 81, 107, 179, 36, 219, 128, 147, 16, 112, 208, 151, 56, 161, 33, 74, 197, 134, 171, 157, 201, 80, 129, 12, 92, 171, 157, 101, 170, 129, 77, 152, 47, 151, 78, 226, 7, 138 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
